{"ast":null,"code":"var _jsxFileName = \"/home/tohshine/Desktop/repository/localMacket/client/pages/payment/[index].jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\n\nconst payment = () => {\n  var countDownDate = new Date(\"Jan 5, 2021 15:37:25\").getTime();\n  const {\n    0: timer,\n    1: settimer\n  } = useState({});\n  useEffect(() => {\n    const setTimer = () => {\n      // Get today's date and time\n      var now = new Date().getTime(); // Find the distance between now and the count down date\n\n      var distance = countDownDate - now; // Time calculations for days, hours, minutes and seconds\n\n      var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      var seconds = Math.floor(distance % (1000 * 60) / 1000); // Display the result in the element with id=\"demo\"\n\n      document.getElementById(\"demo\").innerHTML = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \"; // If the count down is finished, write some text\n\n      if (distance < 0) {\n        clearInterval(x);\n        document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n      }\n    };\n\n    const timerId = setInterval(setTimer(), 1000);\n    return () => {// doing some cleanup cancelling order automatically\n    };\n  }, []); //order product display fuction\n\n  const orderedData = () => {};\n\n  return __jsx(\"div\", {\n    className: \"flex flex-col justify-center items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"max-w-6xl w-full bg-white mt-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-gray-800 text-lg font-bold text-right m-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, timer)));\n};\n\nexport default payment;","map":{"version":3,"sources":["/home/tohshine/Desktop/repository/localMacket/client/pages/payment/[index].jsx"],"names":["React","useState","useEffect","payment","countDownDate","Date","getTime","timer","settimer","setTimer","now","distance","days","Math","floor","hours","minutes","seconds","document","getElementById","innerHTML","clearInterval","x","timerId","setInterval","orderedData"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,MAAIC,aAAa,GAAG,IAAIC,IAAJ,CAAS,sBAAT,EAAiCC,OAAjC,EAApB;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMO,QAAQ,GAAG,MAAI;AACnB;AACJ,UAAIC,GAAG,GAAG,IAAIL,IAAJ,GAAWC,OAAX,EAAV,CAFuB,CAIvB;;AACA,UAAIK,QAAQ,GAAGP,aAAa,GAAGM,GAA/B,CALuB,CAOvB;;AACA,UAAIE,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAX;AACA,UAAII,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CAAX,CAAZ;AACA,UAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAd;AACA,UAAIM,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAd,CAXuB,CAavB;;AACAO,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4CR,IAAI,GAAG,IAAP,GAAcG,KAAd,GAAsB,IAAtB,GAC1CC,OAD0C,GAChC,IADgC,GACzBC,OADyB,GACf,IAD7B,CAduB,CAiBvB;;AACA,UAAIN,QAAQ,GAAG,CAAf,EAAkB;AAChBU,QAAAA,aAAa,CAACC,CAAD,CAAb;AACAJ,QAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4C,SAA5C;AACD;AACE,KAtBD;;AAuBC,UAAMG,OAAO,GAAGC,WAAW,CAACf,QAAQ,EAAT,EAAY,IAAZ,CAA3B;AACD,WAAO,MAAM,CACZ;AACA,KAFD;AAGD,GA7BQ,EA6BN,EA7BM,CAAT,CAJoB,CAkCpB;;AACD,QAAMgB,WAAW,GAAE,MAAI,CAEtB,CAFD;;AAKC,SACE;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAI,IAAA,SAAS,EAAC,gDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgElB,KAAhE,CADI,CADF,CADF;AAOD,CA/CD;;AAiDA,eAAeJ,OAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\n\nconst payment = () => {\n  var countDownDate = new Date(\"Jan 5, 2021 15:37:25\").getTime();\n  const [timer, settimer] = useState({ })\n\n  useEffect(() => {\n    \n    const setTimer = ()=>{\n      // Get today's date and time\n  var now = new Date().getTime();\n\n  // Find the distance between now and the count down date\n  var distance = countDownDate - now;\n\n  // Time calculations for days, hours, minutes and seconds\n  var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n  var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n  // Display the result in the element with id=\"demo\"\n  document.getElementById(\"demo\").innerHTML = days + \"d \" + hours + \"h \"\n  + minutes + \"m \" + seconds + \"s \";\n\n  // If the count down is finished, write some text\n  if (distance < 0) {\n    clearInterval(x);\n    document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n  }\n    }\n     const timerId = setInterval(setTimer(),1000)\n    return () => {\n     // doing some cleanup cancelling order automatically\n    }\n  }, [])\n  //order product display fuction\n const orderedData= ()=>{\n     \n }\n\n\n  return (\n    <div className='flex flex-col justify-center items-center'>\n      <div className='max-w-6xl w-full bg-white mt-12'>\n  <h1 className='text-gray-800 text-lg font-bold text-right m-8'>{timer}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default payment;\n"]},"metadata":{},"sourceType":"module"}